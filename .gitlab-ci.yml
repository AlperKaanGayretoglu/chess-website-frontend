stages:
  - base
  - build
  - deploy

variables:
  CI_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  CI_BASE_IMAGE: ${CI_REGISTRY_IMAGE}/base:latest

Base Image:
  stage: base
  image: docker:18.09
  only:
    changes:
      - package.json
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_BASE_IMAGE || true
  script:
    - docker build
      --network host
      --cache-from $CI_BASE_IMAGE
      --tag $CI_BASE_IMAGE
      -f Base.dockerfile
      .
    - docker push $CI_BASE_IMAGE

Build:
  image: docker:18.09
  stage: build
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build
      --network host
      --tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
      .
    - docker tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
# Deploy Dev:
#   stage: deploy
#   image: debian:10-slim
#   only:
#     - master
#   before_script:
#     - apt update
#     - apt install --no-install-recommends -y openssh-client gettext-base
#     - eval $(ssh-agent -s)
#     - echo "$SSH_IDENTITY" | tr -d '\r' | ssh-add -
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan "$EC2_PUBLIC_IP" >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#   script:
#     - mkdir chess_website_frontend
#     - envsubst < .dev/docker-compose.template.yml > chess_website_frontend/docker-compose.yml
#     - scp -r chess_website_frontend ec2-user@"$EC2_PUBLIC_IP":/home/ec2-user/containers/
#     - ssh ec2-user@"$EC2_PUBLIC_IP" "cd /home/ec2-user/containers/chess_website_frontend && docker-compose up -d"
